spec_mat = spec_mat_s
resp = rownames(spec_mat)
rownames(spec_mat) = seq(nrow(spec_mat))
#determine number of components to use
plsda.fit = plsda(spec_mat, resp, ncomp = 40)
perf.plsda = perf(plsda.fit, validation = "Mfold", folds = 5,
progressBar = TRUE, auc = TRUE, nrepeat = 10)
plot(perf.plsda, col = color.mixo(1:3), sd = TRUE,
legend.position = "horizontal")
set.seed(25)
samp <- sample(1:3, nrow(spec_mat), replace = TRUE)
# 1/3 of the data will compose the test set
test <- which(samp == 1)
# rest will compose the training set
train <- setdiff(1:nrow(spec_mat), test)
## For PLS-DA, train the model
plsda.train <- plsda(spec_mat[train, ], resp[train], ncomp = 25)
# then predict
test.predict <- predict(plsda.train, spec_mat[test, ], dist = "max.dist")
# store prediction for the 4th component
prediction <- test.predict$class$max.dist[,25]
# calculate the error rate of the model
confusion.mat = get.confusion_matrix(truth = resp[test], predicted = prediction)
cm1 = as.data.frame(confusion.mat)
get.BER(confusion.mat)
#plot
par(mar = c(2, 4, 3, 4), oma = c(2, 4, 3, 2))
color2D.matplot(cm1,
show.values = TRUE,
axes = FALSE,
xlab = "",
ylab = "",
vcex = 2,
vcol = "black",
extremes = c("white", "deepskyblue3"))
axis(3, at = seq_len(ncol(cm1)) - 0.5,
labels = names(cm1), tick = FALSE, cex.axis = 1)
axis(2, at = seq_len(nrow(cm1)) -0.5,
labels = rev(rownames(cm1)), tick = FALSE, las = 1, cex.axis = 1)
#data
spec_wet = readRDS("Clean-up/Vector_normalized/vn_all_w.rds")
spec_es = spec_wet[meta(spec_wet)$Location == "Eagle Summit",]
spec_es_nohyb = spec_es[!meta(spec_es)$Species == "hybrid",]
spec_all = spec_es_nohyb
names(spec_all) = meta(spec_all)$Species
spec_all.m = as.matrix(spec_all)
spec_all.df = as.data.frame(spec_all)
#Resample by every 10 nm
spec_small = resample(spec_all, seq(400, 2400, by = 10))
spec_mat_s = as.matrix(spec_small)
spec_mat = spec_mat_s
resp = rownames(spec_mat)
rownames(spec_mat) = seq(nrow(spec_mat))
#determine number of components to use
plsda.fit = plsda(spec_mat, resp, ncomp = 40)
perf.plsda = perf(plsda.fit, validation = "Mfold", folds = 5,
progressBar = TRUE, auc = TRUE, nrepeat = 10)
plot(perf.plsda, col = color.mixo(1:3), sd = TRUE,
legend.position = "horizontal")
set.seed(25)
samp <- sample(1:3, nrow(spec_mat), replace = TRUE)
# 1/3 of the data will compose the test set
test <- which(samp == 1)
# rest will compose the training set
train <- setdiff(1:nrow(spec_mat), test)
## For PLS-DA, train the model
plsda.train <- plsda(spec_mat[train, ], resp[train], ncomp = 22)
# then predict
test.predict <- predict(plsda.train, spec_mat[test, ], dist = "max.dist")
# store prediction for the 4th component
prediction <- test.predict$class$max.dist[,22]
# calculate the error rate of the model
confusion.mat = get.confusion_matrix(truth = resp[test], predicted = prediction)
cm1 = as.data.frame(confusion.mat)
get.BER(confusion.mat)
#plot
par(mar = c(2, 4, 3, 4), oma = c(2, 4, 3, 2))
color2D.matplot(cm1,
show.values = TRUE,
axes = FALSE,
xlab = "",
ylab = "",
vcex = 2,
vcol = "black",
extremes = c("white", "deepskyblue3"))
axis(3, at = seq_len(ncol(cm1)) - 0.5,
labels = names(cm1), tick = FALSE, cex.axis = 1)
axis(2, at = seq_len(nrow(cm1)) -0.5,
labels = rev(rownames(cm1)), tick = FALSE, las = 1, cex.axis = 1)
library("spectrolab")
library("spectrolab")
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
spec = readRDS("Clean-up/Vector_normalized/all_vn.rds")
meta(spec)
f = function(spectra){
spec1 = spec[1940,]
aggregate(spec1, by = meta(spec1)$Name, mean)
}
f = function(spectra){
spec1 = spec[1940,]
aggregate(spec1, by = meta(spec1)$Name, mean, try_keep_txt(mean))
}
################################################################################
#By site
################################################################################
tms = spec[meta(spec)$Location == "Twelve Mile",]
tm = f(tms)
tms
head(tms)
unique(tms)
tm_water = tms[, 1940]
tm_water
f = function(spectra){
spec1 = spec[,1940]
aggregate(spec1, by = meta(spec1)$Name, mean, try_keep_txt(mean))
}
################################################################################
#By site
################################################################################
tms = spec[meta(spec)$Location == "Twelve Mile",]
tm = f(tms)
f = function(spec){
spec1 = aggregate(spec, by = meta(spec)$Name, mean, try_keep_txt(mean))
spec2 = spec1[,1940]
return(spec2)
}
################################################################################
#By site
################################################################################
tms = spec[meta(spec)$Location == "Twelve Mile",]
tm = f(tms)
tm
spec1 = readRDS("Clean-up/Vector_normalized/all_vn.rds")
spec = spec[meta(spec)$Species == "octopetala"]
tms = spec[meta(spec)$Location == "Twelve Mile",]
tm = f(tms)
ess = spec[meta(spec)$Location == "Eagle Summit",]
es = f(ess)
bgs = spec[meta(spec)$Location == "Bison Gulch",]
bg = f(bgs)
mdbs = spec[meta(spec)$Location == "Murphy Dome B",]
mdb = f(mdbs)
wdas = spec[meta(spec)$Location == "Wickersham Dome A",]
wda = f(wdas)
wdbs = spec[meta(spec)$Location == "Wickersham Dome B",]
wdb = f(wdbs)
all = f(spec)
meta(all)
all
class(all)
as.spectra(all)
f = function(spec){
spec1 = aggregate(spec, by = meta(spec)$Name, mean, try_keep_txt(mean))
return(spec1)
}
all = f(spec)
all
all[meta(all)$Location == "Twelve Mile", 1940]
tm
data.frame(tm)
f = function(spec){
spec1 = aggregate(spec, by = meta(spec)$Name, mean, try_keep_txt(mean))
spec2 = spec1[,1940]
return(spec2)
}
################################################################################
#By site
################################################################################
tms = spec[meta(spec)$Location == "Twelve Mile",]
tm = f(tms)
data.frame(tm)
tmd = data.frame(tm)
tmd$Location <- 'Twelve Mile'
tmd
colnames(tmd)<-c("Name", "Reflectance", "Location")
tmd
colnames(tmd)<-c("Reflectance", "Location")
tmd
str(big)
location = "tm"
location
class(location)
f1 = function(spec, location){
spec1 = spec[meta(spec)$Location == location,]
}
tm_test = f1(spec, location = "Twelve Mile")
tm_test
unique(meta(tm_test)$Location)
f = function(spec, location){
spec1 = spec[meta(spec)$Location == location,]
spec2 = aggregate(spec1, by = meta(spec1)$Name, mean, try_keep_txt(mean))
spec3 = spec2[,1940]
specd = data.frame(spec3)
specd$Location <- location
colnames(specd) <- c("Reflectance", "Location")
return(specd)
}
tm = f(spec, location = "Twelve Mile")
tm
tm = f(spec, location = "Twelve Mile")
es = f(spec, location = "Eagle Summit")
bg = f(spec, location = "Bison Gulch")
mdb = f(spec, location = "Murphy Dome B")
wda = f(spec, location = "Wickersham Dome A")
wdb = f(spec, location = "Wickersham Dome B")
es
all.df = Reduce(rbind, c(tm, es, bg, mdb, wda, wdb))
a = rbind(tm, es)
a
all.df = Reduce(rbind, list(tm, es, bg, mdb, wda, wdb))
aall.df
all.df
p <- ggplot(all.df, aes(x=Location, y=Reflectance)) +
geom_boxplot()
library("ggplot2")
p <- ggplot(all.df, aes(x=Location, y=Reflectance)) +
geom_boxplot()
p
p <- ggplot(all.df, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
theme_classic()
p
p <- ggplot(all.df, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm",
x="Location", y = "Vector Normalized Reflectance")+
theme_classic()
p
p <- ggplot(all.df, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm",
x="Location", y = "Vector Normalized Reflectance")+
scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome A", "Wickersham Dome B"
"Twelve Mile", "Bison Gulch", "Murphy Dome B"))
theme_classic()
p <- ggplot(all.df, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm",
x="Location", y = "Vector Normalized Reflectance")+
theme_classic()
p + scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome A", "Wickersham Dome B"
"Twelve Mile", "Bison Gulch", "Murphy Dome B"))
p + scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome A", "Wickersham Dome B",
"Twelve Mile", "Bison Gulch", "Murphy Dome B"))
shapiro.test(tm$Reflectance)
shapiro.test(es$Reflectance)
shapiro.test(bg$Reflectance)
shapiro.test(mdb$Reflectance)
shapiro.test(wda$Reflectance)
shapiro.test(wdb$Reflectance)
library(ggplot2)
library(dplyr)
library(car)
library(vegan)
?aov()
shapiro.test(all.df$Reflectance)
oct.aov = aov(Reflectance ~ Location, data = all.df)
summary.aov(oct.aov)
pairwise.t.test(all.df$Reflectance, all.df$Location, p.adjust.method = "BH")
library("spectrolab")
library("ggplot2")
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
spec1 = readRDS("Clean-up/Vector_normalized/all_vn.rds")
spec = spec[meta(spec)$Species == "alaskensis"]
################################################################################
#Function
################################################################################
f = function(spec, location){
spec1 = spec[meta(spec)$Location == location,]
spec2 = aggregate(spec1, by = meta(spec1)$Name, mean, try_keep_txt(mean))
spec3 = spec2[,1940]
specd = data.frame(spec3)
specd$Location <- location
colnames(specd) <- c("Reflectance", "Location")
return(specd)
}
library("spectrolab")
library("ggplot2")
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
spec1 = readRDS("Clean-up/Vector_normalized/all_vn.rds")
spec = spec[meta(spec)$Species == "alaskensis"]
################################################################################
#Function
################################################################################
f = function(spec, location){
spec1 = spec[meta(spec)$Location == location,]
spec2 = aggregate(spec1, by = meta(spec1)$Name, mean, try_keep_txt(mean))
spec3 = spec2[,1940]
specd = data.frame(spec3)
specd$Location <- location
colnames(specd) <- c("Reflectance", "Location")
return(specd)
}
################################################################################
#By site
################################################################################
tm = f(spec, location = "Twelve Mile")
es = f(spec, location = "Eagle Summit")
wdb = f(spec, location = "Wickersham Dome B")
all.df_a = Reduce(rbind, list(tm, es, wdb))
################################################################################
#Box Plot
################################################################################
p <- ggplot(all.df_a, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm",
x="Location", y = "Vector Normalized Reflectance")+
theme_classic()
p + scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome B",
"Twelve Mile"))
spec = spec[meta(spec)$Species == "alaskensis",]
spec = spec[meta(spec)$Species == "alaskensis",]
spec = spec1[meta(spec1)$Species == "alaskensis",]
f = function(spec, location){
spec1 = spec[meta(spec)$Location == location,]
spec2 = aggregate(spec1, by = meta(spec1)$Name, mean, try_keep_txt(mean))
spec3 = spec2[,1940]
specd = data.frame(spec3)
specd$Location <- location
colnames(specd) <- c("Reflectance", "Location")
return(specd)
}
################################################################################
#By site
################################################################################
tm = f(spec, location = "Twelve Mile")
es = f(spec, location = "Eagle Summit")
wdb = f(spec, location = "Wickersham Dome B")
all.df_a = Reduce(rbind, list(tm, es, wdb))
################################################################################
#Box Plot
################################################################################
p <- ggplot(all.df_a, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm",
x="Location", y = "Vector Normalized Reflectance")+
theme_classic()
p + scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome B",
"Twelve Mile"))
p
p <- ggplot(all.df_a, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm",
x="Location", y = "Vector Normalized Reflectance")+
scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome B",
"Twelve Mile"))
theme_classic()
p
pairwise.t.test(all.df_a$Reflectance, all.df_a$Location, p.adjust.method = "BH")
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
spec1 = readRDS("Clean-up/Vector_normalized/all_vn.rds")
spec = spec1[meta(spec1)$Species == "octopetala"]
################################################################################
#Function
################################################################################
f = function(spec, location){
spec1 = spec[meta(spec)$Location == location,]
spec2 = aggregate(spec1, by = meta(spec1)$Name, mean, try_keep_txt(mean))
spec3 = spec2[,1940]
specd = data.frame(spec3)
specd$Location <- location
colnames(specd) <- c("Reflectance", "Location")
return(specd)
}
################################################################################
#By site
################################################################################
tm = f(spec, location = "Twelve Mile")
es = f(spec, location = "Eagle Summit")
bg = f(spec, location = "Bison Gulch")
mdb = f(spec, location = "Murphy Dome B")
wda = f(spec, location = "Wickersham Dome A")
wdb = f(spec, location = "Wickersham Dome B")
all.df = Reduce(rbind, list(tm, es, bg, mdb, wda, wdb))
################################################################################
#Box Plot
################################################################################
p <- ggplot(all.df, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm - Octopetala",
x="Location", y = "Vector Normalized Reflectance")+
element_text(): p + theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome A", "Wickersham Dome B",
"Twelve Mile", "Bison Gulch", "Murphy Dome B"))
theme_classic()
p
p <- ggplot(all.df, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm - Octopetala",
x="Location", y = "Vector Normalized Reflectance")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome A", "Wickersham Dome B",
"Twelve Mile", "Bison Gulch", "Murphy Dome B"))
theme_classic()
p
p <- ggplot(all.df_a, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm",
x="Location", y = "Vector Normalized Reflectance") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome B",
"Twelve Mile"))
theme_classic()
p
p <- ggplot(all.df_a, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm - Alaskensis",
x="Location", y = "Vector Normalized Reflectance") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome B",
"Twelve Mile"))
theme_classic()
p
################################################################################
#Set up
################################################################################
library("spectrolab")
library("ggplot2")
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
spec1 = readRDS("Clean-up/Vector_normalized/vn_all_w.rds")
spec = spec1[meta(spec1)$Species == "octopetala"]
################################################################################
#Function
################################################################################
f = function(spec, location){
spec1 = spec[meta(spec)$Location == location,]
spec2 = aggregate(spec1, by = meta(spec1)$Name, mean, try_keep_txt(mean))
spec3 = spec2[,1940]
specd = data.frame(spec3)
specd$Location <- location
colnames(specd) <- c("Reflectance", "Location")
return(specd)
}
################################################################################
#By site
################################################################################
es = f(spec, location = "Eagle Summit")
wda = f(spec, location = "Wickersham Dome A")
wdb = f(spec, location = "Wickersham Dome B")
all.df_w_o = Reduce(rbind, list(tm, es, bg, mdb, wda, wdb))
################################################################################
#Box Plot
################################################################################
p <- ggplot(all.df_w_o, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm - Octopetala(wet)",
x="Location", y = "Vector Normalized Reflectance")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome A", "Wickersham Dome B"))
theme_classic()
p
all.df_w_o = Reduce(rbind, list(es, wda, wdb))
p <- ggplot(all.df_w_o, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm - Octopetala(wet)",
x="Location", y = "Vector Normalized Reflectance")+
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome A", "Wickersham Dome B"))
theme_classic()
p
pairwise.t.test(all.df_w_o$Reflectance, all.df_w_o$Location, p.adjust.method = "BH")
library("spectrolab")
library("ggplot2")
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
spec1 = readRDS("Clean-up/Vector_normalized/vn_all_w.rds")
spec = spec1[meta(spec1)$Species == "alaskensis",]
################################################################################
#Function
################################################################################
f = function(spec, location){
spec1 = spec[meta(spec)$Location == location,]
spec2 = aggregate(spec1, by = meta(spec1)$Name, mean, try_keep_txt(mean))
spec3 = spec2[,1940]
specd = data.frame(spec3)
specd$Location <- location
colnames(specd) <- c("Reflectance", "Location")
return(specd)
}
################################################################################
#By site
################################################################################
es = f(spec, location = "Eagle Summit")
wdb = f(spec, location = "Wickersham Dome B")
all.df_a_w = Reduce(rbind, list(es, wdb))
################################################################################
#Box Plot
################################################################################
p <- ggplot(all.df_a_w, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm - Alaskensis",
x="Location", y = "Vector Normalized Reflectance") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome B"))
theme_classic()
p
################################################################################
#Tests for normality
################################################################################
oct.aov = aov(Reflectance ~ Location, data = all.df)
summary.aov(oct.aov)
pairwise.t.test(all.df_a_w$Reflectance, all.df_a_w$Location, p.adjust.method = "BH")
p <- ggplot(all.df_a_w, aes(x=Location, y=Reflectance)) +
geom_boxplot(fill='#A4A4A4', color="black")+
labs(title="Vector Normalized Reflectance at 1940nm - Alaskensis(wet)",
x="Location", y = "Vector Normalized Reflectance") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(limits=c("Eagle Summit", "Wickersham Dome B"))
theme_classic()
p
######
library(mixOmics)
?perf
