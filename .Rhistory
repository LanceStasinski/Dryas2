na.label.col = 'white', addgrid.col = 'grey')
mtext("Reference", side = 2, line = -1, cex = 1.5)
mtext("Prediction", side = 3, cex = 1.5, at = 6, line = 6)
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(0,3,8,0))
corrplot(cm.total, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Reference", side = 2, line = -1, cex = 1.5)
mtext("Prediction", side = 3, cex = 1.5, at = 6, line = 6)
par(mar = c(5.1, 4.1, 8, 2.1), oma = c(0,3,2,0))
corrplot(cm.total, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Reference", side = 2, line = -1, cex = 1.5)
mtext("Prediction", side = 3, cex = 1.5, at = 6, line = 6)
par(mar = c(5.1, 4.1, 20, 2.1), oma = c(0,3,2,0))
corrplot(cm.total, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Reference", side = 2, line = -1, cex = 1.5)
mtext("Prediction", side = 3, cex = 1.5, at = 6, line = 6)
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(cm.total, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 90, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Reference", side = 2, line = -1, cex = 1.5)
mtext("Prediction", side = 3, cex = 1.5, at = 6, line = 6)
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(cm.total, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Reference", side = 2, line = -1, cex = 1.5)
mtext("Prediction", side = 3, cex = 1.5, at = 6, line = 6)
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(cm.total, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 90, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Reference", side = 2, line = -1, cex = 1.5)
mtext("Prediction", side = 3, cex = 1.5, at = 6, line = 6)
View(cm.total)
write.csv(cm.total, "Figures/raw confusion matrices/sp_loc_test")
cm.total = read.csv("Figures/raw confusion matrices/sp_loc_test.csv")
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(cm.total, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 90, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Reference", side = 2, line = -1, cex = 1.5)
mtext("Prediction", side = 3, cex = 1.5, at = 6, line = 6)
cm.total = read.csv("Figures/raw confusion matrices/sp_loc_test.csv", stringsAsFactors = F)
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(cm.total, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 90, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Reference", side = 2, line = -1, cex = 1.5)
mtext("Prediction", side = 3, cex = 1.5, at = 6, line = 6)
View(cm.total)
row.names(cm.total) <- cm.total[,1]
View(cm.total)
cm.total = cm.total[,-1]
View(cm.total)
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(cm.total, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 90, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Reference", side = 2, line = -1, cex = 1.5)
mtext("Prediction", side = 3, cex = 1.5, at = 6, line = 6)
View(cm.total)
cm.total = as.matrix(cm.total)
View(cm.total)
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(cm.total, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 90, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Reference", side = 2, line = -1, cex = 1.5)
mtext("Prediction", side = 3, cex = 1.5, at = 6, line = 6)
library(spectrolab)
library(caret)
library(mlbench)
library(corrplot)
library(matrixStats)
library(naniar)
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
################################################################################
# Fit PLS_DA model all dry
################################################################################
#data
spec_all = readRDS("Clean-up/Clean_spectra/clean_all.rds")
hybrids = spec_all[meta(spec_all)$Species_ID == "DX",]
spec_all = spec_all[!meta(spec_all)$GenePop_ID == "NaN",]
spec_all.m = as.matrix(spec_all)
spec_all.df = as.data.frame(spec_all)
#Resample by every 10 nm
spec_small = resample(spec_all, seq(400, 2400, by = 10))
spec_mat_s = as.matrix(spec_small)
spec_mat = spec_mat_s
#combine relavant meta data to matrix
spec_df = as.data.frame(spec_mat)
spec_df = cbind(spec_df, spec_all.df$GenePop_ID)
colnames(spec_df)[colnames(spec_df) == "spec_all.df$GenePop_ID"] <- "GenePop_ID"
#Partition Data
for(i in 1:10){
set.seed(i)
inTrain <- caret::createDataPartition(
y = spec_df$GenePop_ID,
p = .8,
list = FALSE
)
training <- spec_df[inTrain,]
testing <- spec_df[-inTrain,]
#tune model
ctrl <- trainControl(
method = "repeatedcv",
number = 10,
repeats = 3)
plsFit <- train(
GenePop_ID ~ .,
data = training,
method = "pls",
preProc = c("center", "scale"),
trControl = ctrl,
tuneLength = 100)
assign(paste0('plsFit', i), plsFit)
loadings = plsFit$finalModel$loadings
loadings.m = as.matrix(loadings)
class(loadings.m) <- 'matrix'
assign(paste0('lm',i), loadings.m)
comp1 = loadings.m[,1]
assign(paste0('comp1_',i), comp1)
comp2 = loadings.m[,2]
assign(paste0('comp2_',i), comp2)
comp3 = loadings.m[,3]
assign(paste0('comp3_',i), comp3)
#test model
plsClasses <- predict(plsFit, newdata = testing)
#Confusion matrices
cm = confusionMatrix(data = plsClasses, testing$GenePop_ID)
cm.m = as.matrix(cm)
assign(paste0("cm", i), cm.m)
}
hybrids = as.matrix(hybrids)
View(hybrids)
pred_hyb = predict(plsFit1, newdata = hybrids)
pred_hyb
hyb.df = as.data.frame(pred_hyb)
View(hyb.df)
hybrid.spec = spec_all[meta(spec_all)$Species_ID == "DX",]
spec_all = readRDS("Clean-up/Clean_spectra/clean_all.rds")
hybrid.spec = spec_all[meta(spec_all)$Species_ID == "DX",]
hyb.meta = meta(hybrid.spec)
hyb.df = cbind(hyb.df, hyb.meta)
View(hyb.df)
write.csv(hyb.df, "hybrid_pop_predictions.csv")
33-18
pred_hyb = predict(plsFit2, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
hyb.df = cbind(hyb.df, hyb.meta)
write.csv(hyb.df, "Figures/hybrid_cms/hybrid_pop_predictions2.csv")
pred_hyb = predict(plsFit3, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
hyb.df = cbind(hyb.df, hyb.meta)
write.csv(hyb.df, "Figures/hybrid_cms/hybrid_pop_predictions3.csv")
pred_hyb = predict(plsFit4, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
hyb.df = cbind(hyb.df, hyb.meta)
write.csv(hyb.df, "Figures/hybrid_cms/hybrid_pop_predictions4.csv")
pred_hyb = predict(plsFit5, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
hyb.df = cbind(hyb.df, hyb.meta)
write.csv(hyb.df, "Figures/hybrid_cms/hybrid_pop_predictions5.csv")
pred_hyb = predict(plsFit6, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
hyb.df = cbind(hyb.df, hyb.meta)
write.csv(hyb.df, "Figures/hybrid_cms/hybrid_pop_predictions6.csv")
pred_hyb = predict(plsFit7, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
hyb.df = cbind(hyb.df, hyb.meta)
write.csv(hyb.df, "Figures/hybrid_cms/hybrid_pop_predictions7.csv")
#hybrid stuff
pred_hyb = predict(plsFit8, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
hyb.df = cbind(hyb.df, hyb.meta)
write.csv(hyb.df, "Figures/hybrid_cms/hybrid_pop_predictions8.csv")
pred_hyb = predict(plsFit9, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
hyb.df = cbind(hyb.df, hyb.meta)
write.csv(hyb.df, "Figures/hybrid_cms/hybrid_pop_predictions9.csv")
pred_hyb = predict(plsFit10, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
hyb.df = cbind(hyb.df, hyb.meta)
write.csv(hyb.df, "Figures/hybrid_cms/hybrid_pop_predictions10.csv")
spec_all = readRDS("Clean-up/Clean_spectra/clean_all.rds")
hybrid.spec = spec_all[meta(spec_all)$Species_ID == "DX",]
hybrids = as.matrix(hybrid.spec)
hyb.meta = meta(hybrid.spec)
spec_all = spec_all[!meta(spec_all)$GenePop_ID == "NaN",]
spec_all.m = as.matrix(spec_all)
spec_all.df = as.data.frame(spec_all)
#Resample by every 10 nm
spec_small = resample(spec_all, seq(400, 2400, by = 10))
spec_mat_s = as.matrix(spec_small)
spec_mat = spec_mat_s
#combine relavant meta data to matrix
spec_df = as.data.frame(spec_mat)
spec_df = cbind(spec_df, spec_all.df$GenePop_ID)
colnames(spec_df)[colnames(spec_df) == "spec_all.df$GenePop_ID"] <- "GenePop_ID"
ctrl <- trainControl(
method = "repeatedcv",
number = 10,
repeats = 3)
plsFit <- train(
GenePop_ID ~ .,
data = spec_df,
method = "pls",
preProc = c("center", "scale"),
trControl = ctrl,
tuneLength = 100)
set.seed(1)
pred_hyb = predict(plsFit10, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
view(hyb.df)
set.seed(1)
pred_hyb = predict(plsFit, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
View(hyb.df)
set.seed(2)
pred_hyb = predict(plsFit, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
View(hyb.df)
set.seed(3)
pred_hyb = predict(plsFit, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
View(hyb.df)
hyb.df = cbind(hyb.df, hyb.meta)
set.seed(8)
pred_hyb = predict(plsFit, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
View(hyb.df)
set.seed(7)
pred_hyb = predict(plsFit, newdata = hybrids)
hyb.df = as.data.frame(pred_hyb)
View(hyb.df)
hyb.df = cbind(hyb.df, hyb.meta)
write.csv(hyb.df, "Figures/hybrid_cms/hybrid_pop_predictions_all.csv")
hyb_cm = read.csv('Figures/hybrid_cms/hybrid matrices/hybrid_cm_all.csv',
stringsAsFactors = F)
View(hyb_cm)
colnames(hyb_cm) <- hyb_cm$X
View(hyb_cm)
hyb_cm = read.csv('Figures/hybrid_cms/hybrid matrices/hybrid_cm_all.csv',
stringsAsFactors = F)
rownames(hyb_cm) <- hyb_cm$X
View(hyb_cm)
hyb_cm = hyb_cm[,-1]
View(hyb_cm)
hyb_cm = hyb_cm %>% replace_with_na_all(condition = ~.x == 0)
View(hyb_cm)
rownames(hyb_cm) <- c('es', 'tm', 'wdb')
hyb_cm = as.matrix(hyb_cm)
rownames(hyb_cm) <- c('es', 'tm', 'wdb')
View(hyb_cm)
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 90, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 6)
hyb_cm = hyb_cm[,-1]
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(hyb_cm, is.corr = F, method = 'square', addCoef.col = 'darkorange2',
tl.srt = 90, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n')
mtext("Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 6)
hyb_cm = read.csv('Figures/hybrid_cms/hybrid matrices/hybrid_cm_all.csv',
stringsAsFactors = F)
rownames(hyb_cm) <- hyb_cm$X
hyb_cm = hyb_cm[,-1]
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(hyb_cm, is.corr = F, method = 'square', addCoef.col = 'darkorange2',
tl.srt = 90, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n')
mtext("Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 6)
hyb_cm = read.csv('Figures/hybrid_cms/hybrid matrices/hybrid_cm_all.csv',
stringsAsFactors = F)
rownames(hyb_cm) <- hyb_cm$X
hyb_cm = hyb_cm[,-1]
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(hyb_cm, is.corr = F, method = 'square', addCoef.col = 'darkorange2',
tl.srt = 90, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n')
mtext("Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 6)
View(hyb_cm)
hyb_cm = read.csv('Figures/hybrid_cms/hybrid matrices/hybrid_cm_all.csv',
stringsAsFactors = F)
rownames(hyb_cm) <- hyb_cm$X
hyb_cm = hyb_cm[,-1]
hyb_cm = hyb_cm %>% replace_with_na_all(condition = ~.x == 0)
hyb_cm = as.matrix(hyb_cm)
rownames(hyb_cm) <- c('es', 'tm', 'wdb')
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 90, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 6)
?corrplot
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.lim = c(0,13), na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 6)
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'r', cl.lim = c(0,13), na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 6)
par(mar = c(5.1, 4.1, 4.1, 2.1), oma = c(5.1, 4.1, 4.1, 2.1))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 6)
par(mar = c(0,0,0,0), oma = c(0,0,0,0))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 6)
par(mar = c(0,0,0,0), oma = c(0,0,0,0))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 1)
par(mar = c(0,5,0,0), oma = c(0,0,0,0))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 1)
par(mar = c(0,0,5,0), oma = c(0,0,0,0))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 1)
par(mar = c(0,0,5,0), oma = c(0,0,5,0))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 6, line = 1)
par(mar = c(0,0,0,0), oma = c(0,0,3,0))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 3, line = 1)
par(mar = c(0,0,0,0), oma = c(0,0,3,0))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -1, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 2, line = 1)
par(mar = c(0,0,0,0), oma = c(0,0,3,0))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = .75,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -10, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 2, line = 1)
par(mar = c(0,0,0,0), oma = c(0,0,3,0))
corrplot(hyb_cm, is.corr = F, method = 'color', addCoef.col = 'darkorange2',
tl.srt = 0, tl.offset = 1.5, number.digits = 2, tl.cex = 1,
tl.col = 'black', cl.pos = 'n', na.label = 'square',
na.label.col = 'white', addgrid.col = 'grey')
mtext("Collection Location", side = 2, line = -10, cex = 1.5)
mtext("Predicted Population", side = 3, cex = 1.5, at = 2, line = 1)
#data
hyb = read.csv("Figures/hybrid_cms/hybrid_pop_predictions_all.csv", stringsAsFactors = F)
boxplot(hyb$pred_hyb ~ hyb$DA)
boxplot(hyb$DA ~ hyb$pred_hyb)
par(mar = c(0,0,0,0), oma = c(0,0,0,0))
boxplot(hyb$DA ~ hyb$pred_hyb)
par(mar = c(0,0,0,0), oma = c(0,0,0,0))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population')
#Plot ancestry vs hybrid population prediction
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
################################################################################
# Fit PLS_DA model all dry
################################################################################
#data
hyb = read.csv("Figures/hybrid_cms/hybrid_pop_predictions_all.csv", stringsAsFactors = F)
par(mar = c(0,0,0,0), oma = c(0,0,0,0))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population')
dev.off()
#data
hyb = read.csv("Figures/hybrid_cms/hybrid_pop_predictions_all.csv", stringsAsFactors = F)
par(mar = c(0,0,0,0), oma = c(0,0,0,0))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population')
View(hyb)
par(mar = c(0,0,0,0), oma = c(0,0,0,0))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population', xlim = c(.4,.7))
hyb = read.csv("Figures/hybrid_cms/hybrid_pop_predictions_all.csv", stringsAsFactors = F)
par(mar = c(0,0,0,0), oma = c(0,0,0,0))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population', ylim = c(.4,.7))
par(mar = c(0,0,0,0), oma = c(0,0,0,0))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population', ylim = c(.3,.7))
par(mar = c(4,4,4,4))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population', ylim = c(.3,.7), )
par(mar = c(4,4,4,4))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population', ylim = c(.3,.7))
par(mar = c(5,5,4,4))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population', ylim = c(.3,.7))
par(mar = c(5,5,4,4))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population', ylim = c(.3,.7))
abline(h = 0, lty = 2, lwd = 1)
par(mar = c(5,5,4,4))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population', ylim = c(.3,.7))
abline(h = 0.5, lty = 2, lwd = 1)
par(mar = c(5,5,4,4))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population', ylim = c(.3,.7), notch = T)
abline(h = 0.5, lty = 2, lwd = 1)
par(mar = c(5,5,4,4))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted population', ylim = c(.3,.7), notch = F)
abline(h = 0.5, lty = 2, lwd = 1)
#data
spec_all = readRDS("Clean-up/Clean_spectra/clean_all.rds")
oct = spec_all[meta(spec_all)$Species_ID == "DO"]
library(spectrolab)
ala = spec_all[meta(spec_all)$Species_ID == "DA"]
oct
oct = spec_all[meta(spec_all)$Species_ID == "DO"]
ala = spec_all[meta(spec_all)$Species_ID == "DA"]
#####################################################
oct
460/4
ala
208/4
hby = spec_all[meta(spec_all)$Species_ID == "DX"]
hby
32/4
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
################################################################################
# Fit PLS_DA model all dry
################################################################################
#data
hyb = read.csv("Figures/hybrid_cms/hybrid_pop_predictions_all.csv", stringsAsFactors = F)
par(mar = c(5,5,4,4))
boxplot(DA~Location, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Location', ylim = c(.3,.7), notch = F)
abline(h = 0.5, lty = 2, lwd = 1)
par(mar = c(5,5,4,4))
boxplot(DA~Location, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Location', ylim = c(.3,.7), notch = F,
main = 'D. alaskensis ancestry versus location')
abline(h = 0.5, lty = 2, lwd = 1)
View(hyb)
par(mar = c(5,5,4,4))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Location', ylim = c(.3,.7), notch = F,
main = 'D. alaskensis ancestry versus predicted population')
abline(h = 0.5, lty = 2, lwd = 1)
par(mar = c(5,5,4,4))
boxplot(DA~pred_hyb, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Predicted Population', ylim = c(.3,.7), notch = F,
main = 'D. alaskensis ancestry of hybrids versus predicted population')
abline(h = 0.5, lty = 2, lwd = 1)
par(mar = c(5,5,4,4))
boxplot(DA~Location, data = hyb, ylab = 'Proportion of D. alaskensis ancestry',
xlab = 'Location', ylim = c(.3,.7), notch = F,
main = 'D. alaskensis ancestry of hybrids versus location')
abline(h = 0.5, lty = 2, lwd = 1)
