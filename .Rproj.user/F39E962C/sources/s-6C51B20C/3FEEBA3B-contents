#Caret PLSDA
################################################################################
#Set up
################################################################################

library(spectrolab)
library(caret)
library(mlbench)
library(corrplot)

setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")


################################################################################
# Fit PLS_DA model all dry
################################################################################

#data
spec_all = readRDS("Clean-up/Clean_spectra/clean_all.rds")
spec_all.m = as.matrix(spec_all)
spec_all.df = as.data.frame(spec_all)

#Resample by every 10 nm
spec_small = resample(spec_all, seq(400, 2400, by = 10))
spec_mat_s = as.matrix(spec_small)
spec_mat = spec_mat_s

#combine relavant meta data to matrix
spec_df = as.data.frame(spec_mat)
spec_df = cbind(spec_df, spec_all.df$Species_ID)
colnames(spec_df)[colnames(spec_df) == "spec_all.df$Species_ID"] <- "Species_ID"


#Partition Data



set.seed(1)

inTrain <- caret::createDataPartition(
  y = spec_df$Species_ID,
  p = .8,
  list = FALSE
)

training <- spec_df[inTrain,]
testing <- spec_df[-inTrain,]

#tune model
ctrl <- trainControl(
  method = "repeatedcv", 
  number = 10,
  repeats = 3)


plsFit <- train(
  Species_ID ~ .,
  data = training,
  method = "pls",
  preProc = c("center", "scale"),
  trControl = ctrl,
  tuneLength = 100)

plsFit

#test model
plsClasses <- predict(plsFit, newdata = testing)


#Confusion matrices
cm = confusionMatrix(data = plsClasses, testing$Species_ID)



cm.m = as.matrix(cm)

assign(paste0("cm", i), cm.m)



#plot confusion matrix

cm.total = (cm1 + cm2 + cm3 + cm4 + cm5 + cm6 + cm7 + cm8+ cm9 + cm10)/10
cm.total = t(cm.total)
write.csv(cm.total, "Figures/raw confusion matrices/sp_10it_40")
cm.total = read.csv("Figures/raw confusion matrices/sp_10it_20")
cm.total = as.matrix(cm.total)
cm.prop = cm.total/rowSums(cm.total)

cm.total = read.csv("Figures/raw confusion matrices/sp_10it_20")

par(mar = c(2, 4, 4, 1), oma = c(1,1,1,1))
corrplot(cm.prop, method = 'square', addCoef.col = 'darkorange2', cl.lim = c(0.0,1.0),
         tl.srt = 0, tl.offset = 1.5, number.digits = 3, tl.col = 'black')
mtext("Reference", side = 2, line = -3, cex = 1.5)
mtext("Prediction", side = 3, line = 3.5, cex = 1.5, at = 2)


#plot loadings
loadings = plsFit$finalModel$loadings
plot(loadings)

Comp1 = loadings[,1]
Comp2 = loadings[,2]


par(mar = c(5,5,5,1), mgp = c(3, 1, 0))
plot(Comp1, main = "PLSDA Loadings for Species", xaxt = 'n', type = "l", lwd = 2,
     col = "red", xlab = "Wavelength", ylab = "Loading Value", ylim = c(-0.15, 0.15),
     panel.first = c(rect(1,-.3,31, .25, col = "gray95", border = NA),
                     rect(41,-.3,91, .25, col = "gray95", border = NA),
                     rect(116, -.3, 141, .25, col = "gray95", border = NA),
                     rect(161,-.3, 201, .25, col = "gray95", border = NA)))
axis(1, at=c(11, 61, 111, 161), labels=c(500,1000,1500,2000))
axis(3, at=c(16,66,128.5,181), tick = FALSE, labels = c("VIS", "NIR", "SWIR 1", "SWIR 2"),
     line = -1)
lines(Comp2, col="blue",lty=1, lwd = 2)
abline(h = 0, lty = 2, lwd = 2)
legend("bottomright", inset=.02, title="Components",
       c("1","2"), fill= c("red", "blue"), horiz=TRUE, cex=0.8)