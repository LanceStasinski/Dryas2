spec.mean = spec.mean[row.names(tree.dist),,drop = F]
#calculate distance
spec.dist = as.matrix(dist(spec.mean,
method = "manhattan",
diag = T, upper = T))
spec.dist2 = as.dist(spec.dist)
tree.dist2 = as.dist(tree.dist)
mtest = vegan::mantel(spec.dist2, tree.dist2, method = "spearman",
permutations = 9999)
mtest
#log transform spectral distances
spec.dist = log10(spec.dist)
spec.dist2 = as.dist(spec.dist)
tree.dist2 = as.dist(tree.dist)
library(hexbin)
library(grid)
bin = hexbin(spec.dist2, tree.dist2, xbins = 50)
plot(bin, main = "Genetic distance versus spectral distance",
xlab = "",
ylab = "", colramp=BTY)
grid.text("log10(Spectral distance)", .45, .07, gp=gpar(fontsize=16))
grid.text("Genetic distance", .015, .5, rot=90, gp=gpar(fontsize=16))
bin = hexbin(spec.dist2, tree.dist2, xbins = 50)
plot(bin, main = "Genetic distance versus spectral distance",
xlab = "",
ylab = "", colramp=BTY)
grid.text("log10(Spectral distance)", .45, .07, gp=gpar(fontsize=16))
grid.text("Genetic distance", .015, .5, rot=90, gp=gpar(fontsize=16))
library(spectrolab)
library(ape)
library(phytools)
library(vegan)
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
################################################################################
# Distance matrix
################################################################################
#spectra
spec_all = readRDS("Clean-up/Clean_spectra/clean_all.rds")
spec_all = spec_all[!meta(spec_all)$Species_ID == "DX",]
spec_all = normalize(spec_all)
spec.mean = aggregate(spec_all,
by = meta(spec_all)$Name,
mean, try_keep_txt(mean))
spec.mean = as.matrix(spec.mean)
#change row names
meta_new = read.csv("mean_meta_new.csv", stringsAsFactors = F)
rownames(spec.mean) <- meta_new[, "genetic_name"]
#Genetic distance matrix
tree = read.tree(file = "dryas_phylogeny.treefile")
tree.dist = cophenetic(tree)
#Make sure both matrices have same sample IDs
gene.ID = colnames(tree.dist)
spec.ID = rownames(spec.mean)
remove.gene = setdiff(gene.ID, spec.ID)
remove.spec = setdiff(spec.ID, gene.ID)
tree.dist = tree.dist[!rownames(tree.dist) %in% remove.gene, ]
tree.dist = tree.dist[,!colnames(tree.dist) %in% remove.gene]
spec.mean = spec.mean[!rownames(spec.mean) == "tmi43_DA",]
#reorder spec matrix to match order of genetic matrix
spec.mean = spec.mean[row.names(tree.dist),,drop = F]
#calculate distance
spec.dist = as.matrix(dist(spec.mean,
method = "manhattan",
diag = T, upper = T))
plot(spec.dist, tree.dist)
plot(spec.dist)
spec.dist2 = as.dist(spec.dist)
tree.dist2 = as.dist(tree.dist)
plot(spec.dist2, tree.dist2)
heatmap(spec.dist, tree.dist)
install.packages('gplots')
library(gplots)
?heatmap.2
heatmap.2(spec.dist, tree.dist)
heatmap(spec.dist2, tree.dist2)
hclut(spec.dist)
hclust(spec.dist)
hclust(spec.mean)
library(fpc)
library(cluster)
pam = pamk(spec.dist)
pam
hc = cluster::agnes(spec.dist, diss = T, trace.lev = 2)
plot(hc)
?hclust
fit = hclust(spec.dist2, method = 'ward.D2')
groups = cutree(fit, k=2)
rect.hclust(fit, k=2, border = 'red')
rect.hclust(fit, k=5, border = 'red')
fitk = kmeans(spec.dist2, 2)
plotcluster(spec.dist2, fitk$cluster)
clusplot(spec.dist2, fitk$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
fitk = kmeans(spec.dist, 2)
clusplot(spec.dist, fitk$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
fitk = kmeans(spec.dist, 4)
clusplot(spec.dist, fitk$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
?rect.hclust
plot(groups)
hclust(spec.dist2, method = 'ward.D2')
fit = hclust(spec.dist2, method = 'ward.D2')
plot(fit, hang = -1, cex = .5)
fit.d = as.dendrogram(fit)
plot(fit.d, type = "rectangle", ylab = "Height")
colors = c("red", "blue")
clus2 = cutree(fit, 2)
plot(as.phylo(fit), type = "fan", tip.color = colors[clus2],
label.offset = .1, cex = 0.7)
colors = c("red", "blue", 'brown', 'green', 'black', 'purple')
clus2 = cutree(fit, 6)
plot(as.phylo(fit), type = "fan", tip.color = colors[clus2],
label.offset = .1, cex = 0.7)
colors = c("red", "blue", 'brown', 'green', 'black')
clus2 = cutree(fit, 5)
plot(as.phylo(fit), type = "fan", tip.color = colors[clus2],
label.offset = .1, cex = 0.7)
library(spectrolab)
library(ape)
library(phytools)
library(vegan)
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
################################################################################
# Distance matrix
################################################################################
#spectra
spec_all = readRDS("Clean-up/Clean_spectra/spec_iS50.rds")
spec_all = spec_all[!meta(spec_all)$Species_ID == "DX",]
spec_all = normalize(spec_all)
spec.mean = aggregate(spec_all,
by = meta(spec_all)$Name,
mean, try_keep_txt(mean))
meta(spec.mean)
data = meta(spec.mean)
write.csv(data, "is50_meta.csv")
spec.mean = as.matrix(spec.mean)
#change row names
meta_new = read.csv("is50_meta.csv", stringsAsFactors = F)
rownames(spec.mean) <- meta_new[, "genetic_name"]
View(spec.mean)
#Genetic distance matrix
tree = read.tree(file = "dryas_phylogeny.treefile")
tree.dist = cophenetic(tree)
#Make sure both matrices have same sample IDs
gene.ID = colnames(tree.dist)
spec.ID = rownames(spec.mean)
remove.gene = setdiff(gene.ID, spec.ID)
remove.spec = setdiff(spec.ID, gene.ID)
tree.dist = tree.dist[!rownames(tree.dist) %in% remove.gene, ]
tree.dist = tree.dist[,!colnames(tree.dist) %in% remove.gene]
spec.mean = spec.mean[!rownames(spec.mean) %in% remove.spec,]
View(spec.mean)
nrow(spec.mean)
#reorder spec matrix to match order of genetic matrix
spec.mean = spec.mean[row.names(tree.dist),,drop = F]
spec.dist = as.matrix(dist(spec.mean,
method = "manhattan",
diag = T, upper = T))
spec.dist2 = as.dist(spec.dist)
tree.dist2 = as.dist(tree.dist)
mtest = vegan::mantel(spec.dist2, tree.dist2, method = "spearman",
permutations = 9999)
mtest
hist(spec.dist)
hist(log10(spec.dist))
library(hexbin)
library(grid)
bin = hexbin(spec.dist2, tree.dist2, xbins = 50)
plot(bin, main = "Genetic distance versus spectral distance",
xlab = "",
ylab = "", colramp=BTY)
grid.text("log10(Spectral distance)", .45, .07, gp=gpar(fontsize=16))
grid.text("Genetic distance", .015, .5, rot=90, gp=gpar(fontsize=16))
bin = hexbin(log10(spec.dist2), tree.dist2, xbins = 50)
plot(bin, main = "Genetic distance versus spectral distance",
xlab = "",
ylab = "", colramp=BTY)
grid.text("log10(Spectral distance)", .45, .07, gp=gpar(fontsize=16))
grid.text("Genetic distance", .015, .5, rot=90, gp=gpar(fontsize=16))
library(fpc)
library(cluster)
pam = pamk(spec.dist)
pam
fit = hclust(spec.dist2, method = 'ward.D2')
colors = c("red", "blue")
clus2 = cutree(fit, 2)
plot(as.phylo(fit), type = "fan", tip.color = colors[clus2],
label.offset = .1, cex = 0.7)
spec_all = readRDS("Clean-up/Clean_spectra/spec_iS50.rds")
spec_all = spec_all[!meta(spec_all)$Species_ID == "DX",]
spec.mean = aggregate(spec_all,
by = meta(spec_all)$Name,
mean, try_keep_txt(mean))
spec.mean = as.matrix(spec.mean)
#change row names
meta_new = read.csv("is50_meta.csv", stringsAsFactors = F)
rownames(spec.mean) <- meta_new[, "genetic_name"]
#Genetic distance matrix
tree = read.tree(file = "dryas_phylogeny.treefile")
tree.dist = cophenetic(tree)
#Make sure both matrices have same sample IDs
gene.ID = colnames(tree.dist)
spec.ID = rownames(spec.mean)
remove.gene = setdiff(gene.ID, spec.ID)
remove.spec = setdiff(spec.ID, gene.ID)
tree.dist = tree.dist[!rownames(tree.dist) %in% remove.gene, ]
tree.dist = tree.dist[,!colnames(tree.dist) %in% remove.gene]
spec.mean = spec.mean[!rownames(spec.mean) %in% remove.spec,]
#reorder spec matrix to match order of genetic matrix
spec.mean = spec.mean[row.names(tree.dist),,drop = F]
#calculate distance
spec.dist = as.matrix(dist(spec.mean,
method = "manhattan",
diag = T, upper = T))
spec.dist2 = as.dist(spec.dist)
tree.dist2 = as.dist(tree.dist)
mtest = vegan::mantel(spec.dist2, tree.dist2, method = "spearman",
permutations = 9999)
mtest
pam = pamk(spec.dist)
pam #2 clusters recommended
fit = hclust(spec.dist2, method = 'ward.D2')
colors = c("red", "blue")
clus2 = cutree(fit, 2)
plot(as.phylo(fit), type = "fan", tip.color = colors[clus2],
label.offset = .1, cex = 0.7)
library(spectrolab)
library(ape)
library(phytools)
library(vegan)
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
default_spec_regions()
library(spectrolab)
library(ape)
library(phytools)
library(vegan)
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
################################################################################
# Distance matrix
################################################################################
#spectra
spec_all = readRDS("Clean-up/Clean_spectra/clean_all.rds")
spec_all = spec_all[!meta(spec_all)$Species_ID == "DX",]
spec_all = spec_all[,400:700]
spec_all = normalize(spec_all)
spec.mean = aggregate(spec_all,
by = meta(spec_all)$Name,
mean, try_keep_txt(mean))
spec.mean = as.matrix(spec.mean)
#change row names
meta_new = read.csv("mean_meta_new.csv", stringsAsFactors = F)
rownames(spec.mean) <- meta_new[, "genetic_name"]
#Genetic distance matrix
tree = read.tree(file = "dryas_phylogeny.treefile")
tree.dist = cophenetic(tree)
#Make sure both matrices have same sample IDs
gene.ID = colnames(tree.dist)
spec.ID = rownames(spec.mean)
remove.gene = setdiff(gene.ID, spec.ID)
remove.spec = setdiff(spec.ID, gene.ID)
tree.dist = tree.dist[!rownames(tree.dist) %in% remove.gene, ]
tree.dist = tree.dist[,!colnames(tree.dist) %in% remove.gene]
spec.mean = spec.mean[!rownames(spec.mean) == "tmi43_DA",]
#reorder spec matrix to match order of genetic matrix
spec.mean = spec.mean[row.names(tree.dist),,drop = F]
#calculate distance
spec.dist = as.matrix(dist(spec.mean,
method = "manhattan",
diag = T, upper = T))
################################################################################
#compare matrices
################################################################################
spec.dist2 = as.dist(spec.dist)
tree.dist2 = as.dist(tree.dist)
mtest = vegan::mantel(spec.dist2, tree.dist2, method = "spearman",
permutations = 9999)
mtest
default_spec_regions()
#spectra
spec_all = readRDS("Clean-up/Clean_spectra/clean_all.rds")
spec_all = spec_all[!meta(spec_all)$Species_ID == "DX",]
spec_all = spec_all[,800:1300]
spec_all = normalize(spec_all)
spec.mean = aggregate(spec_all,
by = meta(spec_all)$Name,
mean, try_keep_txt(mean))
spec.mean = as.matrix(spec.mean)
#change row names
meta_new = read.csv("mean_meta_new.csv", stringsAsFactors = F)
rownames(spec.mean) <- meta_new[, "genetic_name"]
#Genetic distance matrix
tree = read.tree(file = "dryas_phylogeny.treefile")
tree.dist = cophenetic(tree)
#Make sure both matrices have same sample IDs
gene.ID = colnames(tree.dist)
spec.ID = rownames(spec.mean)
remove.gene = setdiff(gene.ID, spec.ID)
remove.spec = setdiff(spec.ID, gene.ID)
tree.dist = tree.dist[!rownames(tree.dist) %in% remove.gene, ]
tree.dist = tree.dist[,!colnames(tree.dist) %in% remove.gene]
spec.mean = spec.mean[!rownames(spec.mean) == "tmi43_DA",]
#reorder spec matrix to match order of genetic matrix
spec.mean = spec.mean[row.names(tree.dist),,drop = F]
#calculate distance
spec.dist = as.matrix(dist(spec.mean,
method = "manhattan",
diag = T, upper = T))
################################################################################
#compare matrices
################################################################################
spec.dist2 = as.dist(spec.dist)
tree.dist2 = as.dist(tree.dist)
mtest = vegan::mantel(spec.dist2, tree.dist2, method = "spearman",
permutations = 9999)
mtest
default_spec_regions()
spec_all = readRDS("Clean-up/Clean_spectra/clean_all.rds")
spec_all = spec_all[!meta(spec_all)$Species_ID == "DX",]
spec_all = spec_all[,2000:2400]
spec_all = normalize(spec_all)
spec.mean = aggregate(spec_all,
by = meta(spec_all)$Name,
mean, try_keep_txt(mean))
spec.mean = as.matrix(spec.mean)
#change row names
meta_new = read.csv("mean_meta_new.csv", stringsAsFactors = F)
rownames(spec.mean) <- meta_new[, "genetic_name"]
#Genetic distance matrix
tree = read.tree(file = "dryas_phylogeny.treefile")
tree.dist = cophenetic(tree)
#Make sure both matrices have same sample IDs
gene.ID = colnames(tree.dist)
spec.ID = rownames(spec.mean)
remove.gene = setdiff(gene.ID, spec.ID)
remove.spec = setdiff(spec.ID, gene.ID)
tree.dist = tree.dist[!rownames(tree.dist) %in% remove.gene, ]
tree.dist = tree.dist[,!colnames(tree.dist) %in% remove.gene]
spec.mean = spec.mean[!rownames(spec.mean) == "tmi43_DA",]
#reorder spec matrix to match order of genetic matrix
spec.mean = spec.mean[row.names(tree.dist),,drop = F]
#calculate distance
spec.dist = as.matrix(dist(spec.mean,
method = "manhattan",
diag = T, upper = T))
################################################################################
#compare matrices
################################################################################
spec.dist2 = as.dist(spec.dist)
tree.dist2 = as.dist(tree.dist)
mtest = vegan::mantel(spec.dist2, tree.dist2, method = "spearman",
permutations = 9999)
mtest
default_spec_regions()
spec_all = readRDS("Clean-up/Clean_spectra/clean_all.rds")
spec_all = spec_all[!meta(spec_all)$Species_ID == "DX",]
spec_all = spec_all[,1500:2400]
spec_all = normalize(spec_all)
spec.mean = aggregate(spec_all,
by = meta(spec_all)$Name,
mean, try_keep_txt(mean))
spec.mean = as.matrix(spec.mean)
#change row names
meta_new = read.csv("mean_meta_new.csv", stringsAsFactors = F)
rownames(spec.mean) <- meta_new[, "genetic_name"]
#Genetic distance matrix
tree = read.tree(file = "dryas_phylogeny.treefile")
tree.dist = cophenetic(tree)
#Make sure both matrices have same sample IDs
gene.ID = colnames(tree.dist)
spec.ID = rownames(spec.mean)
remove.gene = setdiff(gene.ID, spec.ID)
remove.spec = setdiff(spec.ID, gene.ID)
tree.dist = tree.dist[!rownames(tree.dist) %in% remove.gene, ]
tree.dist = tree.dist[,!colnames(tree.dist) %in% remove.gene]
spec.mean = spec.mean[!rownames(spec.mean) == "tmi43_DA",]
#reorder spec matrix to match order of genetic matrix
spec.mean = spec.mean[row.names(tree.dist),,drop = F]
#calculate distance
spec.dist = as.matrix(dist(spec.mean,
method = "manhattan",
diag = T, upper = T))
################################################################################
#compare matrices
################################################################################
spec.dist2 = as.dist(spec.dist)
tree.dist2 = as.dist(tree.dist)
mtest = vegan::mantel(spec.dist2, tree.dist2, method = "spearman",
permutations = 9999)
mtest
10+15+2+16+16+12
3.5*8
525/28
100/2.5
library(elevatr)
library(sp)
install.packages('elevatr')
examp_df <- data.frame(x = seq(from = -130.0, to = -180.0, length.out = 1000), y = seq(from = 51, to = 72, length.out = 1000)) # AKmap
# set data
prj_dd <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
# get raster
elevation_df <- get_elev_raster(examp_df, prj = prj_dd, z = 12)
library(elevatr)
# get raster
elevation_df <- get_elev_raster(examp_df, prj = prj_dd, z = 12)
prj_dd <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
# get raster
elevation_df <- get_elev_raster(examp_df, prj = prj_dd, z = 12)
# Create a data.frame
examp_df <- data.frame(x = seq(from = -144.5, to = -149.5, length.out = 500), y = seq(from = 63.6, to = 65.6, length.out = 500))
examp_df <- data.frame(x = seq(from = -130.0, to = -180.0, length.out = 1000), y = seq(from = 51, to = 72, length.out = 1000)) # AKmap
# set data
prj_dd <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
# get raster
elevation_df <- get_elev_raster(examp_df, prj = prj_dd, z = 12)
# plot
?get_elev_raster
prj_dd <- +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs
# get raster
elevation_df <- get_elev_raster(examp_df, prj = prj_dd, z = 12)
install.packages('installr')
library(installr)
updateR()
updateR()
install.packages(c("ape", "fpc", "hexbin", "phytools", "spectrolab", "vegan"))
library(spectrolab)
library(ape)
library(phytools)
library(vegan)
?cophenetic
library(elevatr)
library(sp)
install.packages('sp','elevatr')
install.packages('sp')
installed.packages('elevatr')
library(elevatr)
library(sp)
install.packages('elevatr')
library(elevatr)
library(sp)
examp_df <- data.frame(x = seq(from = -144.5, to = -149.5, length.out = 500), y = seq(from = 63.6, to = 65.6, length.out = 500))
examp_df <- data.frame(x = seq(from = -130.0, to = -180.0, length.out = 1000), y = seq(from = 51, to = 72, length.out = 1000)) # AKmap
# set data
prj_dd <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
# get raster
elevation_df <- get_elev_raster(examp_df, prj = prj_dd, z = 12)
install.packages('rgdal')
library(rgdal)
examp_df <- data.frame(x = seq(from = -144.5, to = -149.5, length.out = 500), y = seq(from = 63.6, to = 65.6, length.out = 500))
examp_df <- data.frame(x = seq(from = -130.0, to = -180.0, length.out = 1000), y = seq(from = 51, to = 72, length.out = 1000)) # AKmap
# set data
prj_dd <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
# get raster
elevation_df <- get_elev_raster(examp_df, prj = prj_dd, z = 12)
# get raster
elevation_df <- get_elev_raster(examp_df, prj = prj_dd, z = 4)
warnings()
# plot
plot(elevation_df, xlim=c(-130,-180))
# plot
plot(elevation_df, xlim=c(-180,-130))
# get raster
elevation_df <- get_elev_raster(examp_df, prj = prj_dd, z = 8)
# plot
plot(elevation_df, xlim=c(-180,-130))
plot(elevation_df,
breaks = 10,
col = terrain.colors(10),
main="10")
plot(elevation_df,
breaks = c(0,200,400,600,800,1000,1500,2000,2500,3000,4000),
col = c("#00A600FF", "#19AF00FF", "#35B800FF", "#E6E600FF", "#EBB25EFF", "#EBB16EFF", "#EDB48EFF", "#EFC0AFFF", "#F1D5D0FF", "#F1E2E1FF", "#F2F2F2FF"))
plot(elevation_df,
breaks = c(0,400,760,1200,1600,2000,3000,4000),
col = c("#00A600FF", "#35B800FF", "#E6E600FF", "#E8C32EFF", "#EAB64EFF", "#ECB17EFF", "#F0C9C0FF", "#F2F2F2FF"))
plot(elevation_df,
breaks = c(0,200,400,600,800,1000,1500,2000,2500,3000,4000),
col = c("#00A600FF", "#19AF00FF", "#35B800FF", "#E6E600FF", "#EBB25EFF", "#EBB16EFF", "#EDB48EFF", "#EFC0AFFF", "#F1D5D0FF", "#F1E2E1FF", "#F2F2F2FF"))
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
sites <- as.data.frame(read.csv("sites.csv"))
site <- sites[,-1]
# Create an example SpatialPoints
examp_sp <- SpatialPoints(site, proj4string = CRS(prj_dd))
plot(examp_sp, add = TRUE, pch = 13, col = "black",
lwd = 2, cex = 2)
install.packages('rnaturalearth')
library(rnaturalearth)
world <- ne_countries(scale = "medium", returnclass = "sf")
install.packages("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
install.packages('rgeos')
library(rgeos)
world <- ne_countries(scale = "medium", returnclass = "sf")
m <- ggplot(data = world) +
geom_sf(fill="white") +
coord_sf(xlim = c(-180, -130), ylim = c(51, 72), expand = FALSE) +
theme(panel.background = element_rect(fill = "aliceblue"))
m
install.packages('ggplot2')
library(ggplot2)
m <- ggplot(data = world) +
geom_sf(fill="white") +
coord_sf(xlim = c(-180, -130), ylim = c(51, 72), expand = FALSE) +
theme(panel.background = element_rect(fill = "aliceblue"))
m
m <- ggplot(data = world) +
geom_sf(fill="white") +
coord_sf(xlim = c(-170, -140), ylim = c(51, 72), expand = FALSE) +
theme(panel.background = element_rect(fill = "aliceblue"))
m
install.packages(sf)
install.packages('sf')
